(function() {
    var implementors = Object.fromEntries([["smoldot",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"smoldot/executor/host/runtime_version/struct.CoreVersion.html\" title=\"struct smoldot::executor::host::runtime_version::CoreVersion\">CoreVersion</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"smoldot/json_rpc/methods/struct.HexString.html\" title=\"struct smoldot::json_rpc::methods::HexString\">HexString</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"smoldot/libp2p/peer_id/struct.PeerId.html\" title=\"struct smoldot::libp2p::peer_id::PeerId\">PeerId</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"smoldot/trie/trie_node/struct.MerkleValueOutput.html\" title=\"struct smoldot::trie::trie_node::MerkleValueOutput\">MerkleValueOutput</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"smoldot/executor/host/struct.LogEmitInfoStr.html\" title=\"struct smoldot::executor::host::LogEmitInfoStr\">LogEmitInfoStr</a>&lt;'a&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"smoldot/executor/host/struct.LogEmitInfoHex.html\" title=\"struct smoldot::executor::host::LogEmitInfoHex\">LogEmitInfoHex</a>&lt;'a&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"smoldot/libp2p/multiaddr/struct.DomainName.html\" title=\"struct smoldot::libp2p::multiaddr::DomainName\">DomainName</a>&lt;T&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"smoldot/libp2p/multiaddr/struct.Multiaddr.html\" title=\"struct smoldot::libp2p::multiaddr::Multiaddr\">Multiaddr</a>&lt;T&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"smoldot/libp2p/multihash/struct.Multihash.html\" title=\"struct smoldot::libp2p::multihash::Multihash\">Multihash</a>&lt;T&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[3477]}